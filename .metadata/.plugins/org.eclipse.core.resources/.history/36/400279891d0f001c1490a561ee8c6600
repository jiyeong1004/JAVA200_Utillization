// 093. 이번 주 빌보드 차트를 파싱하여 객체로 저장하기
package kr.co.infopub.chapter.s093;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.URL;
import java.util.ArrayList;

import kr.co.infopub.chapter.s083.Billboard;

public class RequestFromBillboardHot {
	ArrayList<String> htmls = new ArrayList<String>();
	ArrayList<Billboard> billboards = new ArrayList<Billboard>();
	boolean isConnection = false;
	public RequestFromBillboardHot2() {
		htmls.clear();
		billboards.clear();
	}
	
	public ArrayList<Billboard> getBillboards(){
		return billboards;
	}
	
	public void getAllHtml(String newUrls) {
		htmls.clear();
		URL url = null;
		try {
			url = new URL(newUrls);  // 주소 찾기
			// 주소지에 빨대 꽂기
			BufferedReader reader = new BufferedReader(
					new InputStreamReader(url.openStream(), "euc-kr"), 8);
			String line = "";
			while((line = reader.readLine()) != null) {
				if(!line.trim().equals("")) {
					htmls.add(line.trim());
				}
			}
			isConnection = true;
		} catch(Exception e) {
			isConnection = false;
			System.out.println("Billboard Parsing error !!!");
		}
	}
	
	public String getTimeDate(String newUrls) {
		String s = "";
		URL url = null;
		try {
			url = new URL(newUrls);  // 주소 찾기
			// 주소지에 빨대 꽂기
			BufferedReader reader = new BufferedReader(
					new InputStreamReader(url.openStream(), "euc-kr"), 8);
			String line = "";
			while((line = reader.readLine()) != null) {
				if(line.trim().equals("")) {
					if(line.trim().contains("<time datetime=")) {
						s = line.trim();
						s = s.substring(0, s.indexOf(">") - 1 );
						s = s.substring(s.indexOf("\"") + 1).trim();
						break;
					}
				}
			}
			isConnection = true;
		} catch(Exception e) {
			isConnection = false;
			System.out.println("Billboard Parsing error !!!");
		}
		return s;
	}
	
	public synchronized void getBillboardData(String msg) {
		Billboards.clear();
		for(int i = 0; i < htmls.size(); i++) {
			String ss = htmls.get(i);
			if(ss.contains(msg)) {
				String rank = ss.substring(ss.indexOf("chart-row--") + "chart-row--".length());
			}
		}
	}

	public static void main(String[] args) {
		RequestFromBillboardHot rfw = new RequestFromBillboardHot();
		String a = "https://www.billboard.com/charts/hot-100/";
		String rs = rfw.getTimeDate(a);
		rs = RestDay.toWantedDay(rs, 1);  // 1주 전
		System.out.println(rs);
		rfw.getAllHtml(a + rs);
		String str = "<article class = \"chart-row";
		rfw.getBillboardData(str);
		rfw.printBillboard();
	}
}
